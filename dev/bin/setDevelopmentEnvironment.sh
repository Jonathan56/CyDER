#!/bin/bash
##############################################################
# Batch file that sets environment variables for FMU 
# co-simulation and model exchange.
# This file sets environment variables for the FMU for
# co-simulation and model exchange.
# It is only needed for users who develop and compile the
# code. Users should not have to make changes to this file.
#
# This file gets all environment variables from
# the files systemVariables-mac.properties
# or systemVariables-linux.properties
# 
# To run this file, change to top level directory of the 
# FMU and type
#  source bin/setenv.sh
# To force reseting variables, use
#  source bin/setenv.sh -f
#
# This file is modified based on a file with the same name in 
# BCVTB version 1.1.0 written by Michael Wetter.
#
# Author: Wangda Zuo
# WZuo@lbl.gov                                   2012-04-26
##############################################################
if ! [[ "$0" == "bash" || "$0" == "-bash" ]]; then
    echo "Error: Script setDevelopmentEnvironment.sh must be run as"
    echo "         source bin/setDevelopmentEnvironment.sh"
    echo "       and not as"
    echo "         bin/setDevelopmentEnvironment.sh"
    echo "       Exit with error."
    exit 1
fi
dirNam=`pwd`
filNam=`pwd`/bin/setDevelopmentEnvironment.sh
##############################################################
# Ensure that we are in the top level directory of the FMU
# This is needed since we use the pwd command
#if test ! "`ls $filNam 2> /dev/null`"; then
#	echo "Error: Script setDevelopmentEnvironment.sh must be run from root directory"
#        echo "       of the FMU and not from `pwd`"
#        echo "       Exit with error."
#	return 1
#fi
##############################################################
# Don't run script twice, unless forced to do so
if [ "$1" != "-f" ]; then
    if test ${FMUEnvSet}; then
	echo "FMU environment already set. Doing nothing."
	echo "To set again, use 'source $filNam -f'"
	return 1
    fi
else
    echo "Forcing reset of environment variables."
fi

##############################################################
# Get path from systemVariables-*.properties
# This ensures that EnergyPlus can be found if a user sets it
# on the path in systemVariables-*.properties
PATH=`java -jar "$dirNam/bin/FMU.jar" --getEnvironmentVariable PATH`

##############################################################
# System dependent environment variables
case `uname` in
    Linux)
	export LD_LIBRARY_PATH=`java -jar "$dirNam/bin/FMU.jar" --getEnvironmentVariable LD_LIBRARY_PATH`
	FMU_OS=linux
    ;;
    Darwin)
	export DYLD_LIBRARY_PATH=`java -jar "$dirNam/bin/FMU.jar" --getEnvironmentVariable DYLD_LIBRARY_PATH`
	FMU_OS=mac
    ;;*)
    	echo "setDevelopmentEnvironment.sh: Unknown operating system: `uname`"
esac

PROPERTYFILE=build.properties
FMUUSEMS=true # Set to true to use Microsoft compiler, set to false to use cygwin

##############################################################
# Set directories

# top level directory of the FMU
FMU_HOME=`pwd`

# Java CLASSPATH
CLASSPATH=$CLASSPATH:$FMU_HOME/lib/cpptasks.jar

##############################################################
# Set properties for ant build file
echo "// This file was autogenerated by $user on `date`" > $PROPERTYFILE
echo "// Changes to this file will be lost whenever" >> $PROPERTYFILE
echo "// $filNam is executed."  >> $PROPERTYFILE
if test "`which ifort 2> /dev/null`"; then
    echo haveIfort=true >> $PROPERTYFILE
fi
if test "`which doxygen 2> /dev/null`"; then
    echo haveDoxygen=true >> $PROPERTYFILE
fi

##############################################################
# Export variables
export FMUEnvSet="true"
export CLASSPATH
export PATH
export FMU_HOME
